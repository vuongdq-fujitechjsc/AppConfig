# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do 
    setup_circle_ci
  end

  desc "Run unit test"
  lane :unittest do
    run_tests(
      workspace: ENV['WORKSPACE'].to_s,
      devices: ["iPhone 13"],
      scheme: ENV["Scheme"].to_s)
    end

  desc "Export to Testflight"
    lane :export do
      time = Time.new.strftime("%Y_%d_%m_%H_%M_%S")

      app_name = get_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'PRODUCT_NAME'
            )

            identifider = get_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'PRODUCT_BUNDLE_IDENTIFIER'
            )

            version = get_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'BUNDLE_SHORT_VERSION_STRING'
            )

            build_number = get_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'BUNDLE_VERSION'
            )

            build_number = build_number.to_i
            build_number += 1

            update_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'BUNDLE_VERSION',
              value: build_number.to_s
            )

            file = time + "_" + app_name.gsub(' ', '') + "_" + version + "_" + build_number.to_s + ".ipa"

            gym(
                workspace: ENV['WORKSPACE'].to_s,
                configuration: ENV['CONFIGURATION'].to_s,
                scheme: ENV['SCHEME'].to_s,
                export_method: "development",
                output_directory: "./fastlane/build",
                output_name: file,
                clean: true,
                export_options: {
                    uploadBitcode: false,
                    uploadSymbols: false,
                    compileBitcode: false,
                    provisioningProfiles: { identifider => ENV['PROVISION_NAME'].to_s, "signingStyle": "manual" }
                }
            )
            upload_to_testflight(
              app_identifier: identifider,
              skip_submission: true
            )
    end
end
